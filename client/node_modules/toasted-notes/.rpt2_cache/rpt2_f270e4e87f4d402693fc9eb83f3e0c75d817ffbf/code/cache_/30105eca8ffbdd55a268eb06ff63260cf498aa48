{"code":"import * as ReactDOM from \"react-dom\";\r\nimport * as React from \"react\";\r\nimport ToastManager from \"./ToastManager\";\r\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\r\nconst PORTAL_ID = \"react-toast\";\r\nclass Toaster {\r\n    constructor() {\r\n        this.bindNotify = (fn) => {\r\n            this.createNotification = fn;\r\n        };\r\n        this.notify = (message, options = {}) => {\r\n            if (this.createNotification) {\r\n                this.createNotification(message, options);\r\n            }\r\n        };\r\n        if (!isBrowser) {\r\n            return;\r\n        }\r\n        let portalElement;\r\n        const existingPortalElement = document.getElementById(PORTAL_ID);\r\n        if (existingPortalElement) {\r\n            portalElement = existingPortalElement;\r\n        }\r\n        else {\r\n            const el = document.createElement(\"div\");\r\n            el.id = PORTAL_ID;\r\n            el.className = \"Toaster\";\r\n            if (document.body != null) {\r\n                document.body.appendChild(el);\r\n            }\r\n            portalElement = el;\r\n        }\r\n        ReactDOM.render(<ToastManager notify={this.bindNotify}/>, portalElement);\r\n    }\r\n}\r\nexport default Toaster;\r\n","dts":{"name":"/Users/bmcmahen/Web/toasted-notes/Alert/Toast.d.ts","writeByteOrderMark":false,"text":"import { MessageOptionalOptions } from \"./ToastManager\";\r\nimport { MessageProp } from \"./Message\";\r\ndeclare class Toaster {\r\n    createNotification?: Function;\r\n    constructor();\r\n    bindNotify: (fn: Function) => void;\r\n    notify: (message: MessageProp, options?: MessageOptionalOptions) => void;\r\n}\r\nexport default Toaster;\r\n"}}
