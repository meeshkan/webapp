{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/Dashboard/branch.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Card from \"../molecules/card\";\nimport { Test, statusBadge } from \"../molecules/test\"; // import { GraphQLClient } from \"graphql-request\";\n\nvar Branch = function Branch() {\n  return __jsx(Card, {\n    gridArea: \"1 / 3 / 3 / 4\",\n    heading: \"Branch tests\",\n    pageLink: \"/branch\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, branchTests.map(function (test, index) {\n    __jsx(Test, {\n      key: index,\n      branchName: test.name,\n      date: test.date,\n      status: test.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\nexport default Branch;\nvar branchTests = [{\n  name: \"master@HEAD\",\n  date: \"Mar 12\",\n  status: statusBadge.inProgress\n}, {\n  name: \"master@9a8d22a\",\n  date: \"Mar 11\",\n  status: statusBadge.success\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.success\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}, {\n  name: \"master@759fb8b\",\n  date: \"Mar 9\",\n  status: statusBadge.failed\n}];","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/Dashboard/branch.tsx"],"names":["React","Card","Test","statusBadge","Branch","branchTests","map","test","index","name","date","status","inProgress","success","failed"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,mBAAlC,C,CACA;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,GAAM;AACnB,SACE,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAC,eAAf;AAA+B,IAAA,OAAO,EAAC,cAAvC;AAAsD,IAAA,QAAQ,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,WAAW,CAACC,GAAZ,CAAgB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,UAAC,IAAD;AACE,MAAA,GAAG,EAAEA,KADP;AAEE,MAAA,UAAU,EAAED,IAAI,CAACE,IAFnB;AAGE,MAAA,IAAI,EAAEF,IAAI,CAACG,IAHb;AAIE,MAAA,MAAM,EAAEH,IAAI,CAACI,MAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMD,GAPA,CADH,CADF;AAYD,CAbD;;AAeA,eAAeP,MAAf;AAEA,IAAMC,WAAW,GAAG,CAClB;AACEI,EAAAA,IAAI,EAAE,aADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACS;AAHtB,CADkB,EAMlB;AACEH,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACU;AAHtB,CANkB,EAWlB;AACEJ,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACU;AAHtB,CAXkB,EAgBlB;AACEJ,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CAhBkB,EAqBlB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CArBkB,EA0BlB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CA1BkB,EA+BlB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CA/BkB,EAoClB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CApCkB,EAyClB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CAzCkB,EA8ClB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CA9CkB,EAmDlB;AACEL,EAAAA,IAAI,EAAE,gBADR;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,MAAM,EAAER,WAAW,CAACW;AAHtB,CAnDkB,CAApB","sourcesContent":["import React from \"react\";\nimport Card from \"../molecules/card\";\nimport { Test, statusBadge } from \"../molecules/test\";\n// import { GraphQLClient } from \"graphql-request\";\n\nconst Branch = () => {\n  return (\n    <Card gridArea=\"1 / 3 / 3 / 4\" heading=\"Branch tests\" pageLink=\"/branch\">\n      {branchTests.map((test, index) => {\n        <Test\n          key={index}\n          branchName={test.name}\n          date={test.date}\n          status={test.status}\n        />;\n      })}\n    </Card>\n  );\n};\n\nexport default Branch;\n\nconst branchTests = [\n  {\n    name: \"master@HEAD\",\n    date: \"Mar 12\",\n    status: statusBadge.inProgress,\n  },\n  {\n    name: \"master@9a8d22a\",\n    date: \"Mar 11\",\n    status: statusBadge.success,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.success,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n  {\n    name: \"master@759fb8b\",\n    date: \"Mar 9\",\n    status: statusBadge.failed,\n  },\n];\n"]},"metadata":{},"sourceType":"module"}