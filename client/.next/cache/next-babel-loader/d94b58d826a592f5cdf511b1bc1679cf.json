{"ast":null,"code":"var _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/test.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Stack, Text, Badge, Box, useColorMode } from \"@chakra-ui/core\";\nexport let statusBadge;\n\n(function (statusBadge) {\n  statusBadge[\"inProgress\"] = \"In Progress\";\n  statusBadge[\"success\"] = \"Success\";\n  statusBadge[\"failed\"] = \"Failed\";\n})(statusBadge || (statusBadge = {}));\n\nexport const Test = ({\n  branchName,\n  date,\n  status\n}) => {\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(Box, {\n    my: 3,\n    borderBottom: \"1px solid\",\n    borderColor: `mode.${colorMode}.icon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    fontWeight: 600,\n    lineHeight: \"normal\",\n    color: `mode.${colorMode}.title`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, branchName), __jsx(Badge, {\n    variantColor: status === \"In Progress\" ? \"yellow\" : status === \"Success\" ? \"cyan\" : status === \"Failed\" ? \"red\" : null,\n    fontWeight: 600,\n    rounded: \"sm\",\n    padding: \"0px 4px\",\n    minH: \"auto\",\n    mb: 3,\n    textTransform: \"none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, status)), __jsx(Text, {\n    color: `mode.${colorMode}.text`,\n    fontSize: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, date));\n};","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/test.tsx"],"names":["React","Stack","Text","Badge","Box","useColorMode","statusBadge","Test","branchName","date","status","colorMode"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,EAA6BC,GAA7B,EAAkCC,YAAlC,QAAsD,iBAAtD;AAEA,WAAYC,WAAZ;;WAAYA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;AAAAA,EAAAA,W;GAAAA,W,KAAAA,W;;AAYZ,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAD,KAA6C;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,YAAY,EAAlC;AACA,SACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,YAAY,EAAC,WAAzB;AAAqC,IAAA,WAAW,EAAG,QAAOM,SAAU,OAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AACE,IAAA,UAAU,EAAE,GADd;AAEE,IAAA,UAAU,EAAC,QAFb;AAGE,IAAA,KAAK,EAAG,QAAOA,SAAU,QAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,UALH,CADF,EAQE,MAAC,KAAD;AACE,IAAA,YAAY,EACVE,MAAM,KAAK,aAAX,GACI,QADJ,GAEIA,MAAM,KAAK,SAAX,GACA,MADA,GAEAA,MAAM,KAAK,QAAX,GACA,KADA,GAEA,IARR;AAUE,IAAA,UAAU,EAAE,GAVd;AAWE,IAAA,OAAO,EAAC,IAXV;AAYE,IAAA,OAAO,EAAC,SAZV;AAaE,IAAA,IAAI,EAAC,MAbP;AAcE,IAAA,EAAE,EAAE,CAdN;AAeE,IAAA,aAAa,EAAC,MAfhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAiBGA,MAjBH,CARF,CADF,EA8BE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAG,QAAOC,SAAU,OAA/B;AAAuC,IAAA,QAAQ,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IADH,CA9BF,CADF;AAoCD,CAtCM","sourcesContent":["import React from \"react\";\nimport { Stack, Text, Badge, Box, useColorMode } from \"@chakra-ui/core\";\n\nexport enum statusBadge {\n  inProgress = \"In Progress\",\n  success = \"Success\",\n  failed = \"Failed\",\n}\n\ntype TestProps = {\n  branchName: string;\n  date: string;\n  status: statusBadge;\n};\n\nexport const Test = ({ branchName, date, status }: TestProps) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box my={3} borderBottom=\"1px solid\" borderColor={`mode.${colorMode}.icon`}>\n      <Stack isInline>\n        <Text\n          fontWeight={600}\n          lineHeight=\"normal\"\n          color={`mode.${colorMode}.title`}\n        >\n          {branchName}\n        </Text>\n        <Badge\n          variantColor={\n            status === \"In Progress\"\n              ? \"yellow\"\n              : status === \"Success\"\n              ? \"cyan\"\n              : status === \"Failed\"\n              ? \"red\"\n              : null\n          }\n          fontWeight={600}\n          rounded=\"sm\"\n          padding=\"0px 4px\"\n          minH=\"auto\"\n          mb={3}\n          textTransform=\"none\"\n        >\n          {status}\n        </Badge>\n      </Stack>\n\n      <Text color={`mode.${colorMode}.text`} fontSize=\"sm\">\n        {date}\n      </Text>\n    </Box>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}