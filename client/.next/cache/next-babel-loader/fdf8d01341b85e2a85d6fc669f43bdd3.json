{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/test.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Stack, Text, Badge } from \"@chakra-ui/core\";\nvar Status;\n\n(function (Status) {\n  Status[\"inProgress\"] = \"In Progress\";\n  Status[\"success\"] = \"Success\";\n  Status[\"failed\"] = \"Failed\";\n})(Status || (Status = {}));\n\nvar TestSummary = function TestSummary(_ref) {\n  var branchName = _ref.branchName,\n      date = _ref.date,\n      status = _ref.status;\n  return __jsx(React.Fragment, null, __jsx(Stack, {\n    isInline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, branchName), __jsx(Badge, {\n    variantColor: \"cyan\",\n    fontSize: \"14px\",\n    fontWeight: 600,\n    rounded: \"sm\",\n    padding: \"0px 4px\",\n    minH: \"auto\",\n    mb: 3,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, status)), __jsx(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, date));\n};\n\nexport default TestSummary;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/test.tsx"],"names":["React","Stack","Text","Badge","Status","TestSummary","branchName","date","status"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,KAAtB,QAAmC,iBAAnC;IAEKC,M;;WAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;AAAAA,EAAAA,M;GAAAA,M,KAAAA,M;;AAYL,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6C;AAAA,MAA1CC,UAA0C,QAA1CA,UAA0C;AAAA,MAA9BC,IAA8B,QAA9BA,IAA8B;AAAA,MAAxBC,MAAwB,QAAxBA,MAAwB;AAC/D,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,UAAP,CADF,EAEE,MAAC,KAAD;AACE,IAAA,YAAY,EAAC,MADf;AAEE,IAAA,QAAQ,EAAC,MAFX;AAGE,IAAA,UAAU,EAAE,GAHd;AAIE,IAAA,OAAO,EAAC,IAJV;AAKE,IAAA,OAAO,EAAC,SALV;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,EAAE,EAAE,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGE,MATH,CAFF,CADF,EAeE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,IAAP,CAfF,CADF;AAmBD,CApBD;;AAsBA,eAAeF,WAAf","sourcesContent":["import React from \"react\";\nimport { Stack, Text, Badge } from \"@chakra-ui/core\";\n\nenum Status {\n  inProgress = \"In Progress\",\n  success = \"Success\",\n  failed = \"Failed\",\n}\n\ntype TestProps = {\n  branchName: string;\n  date: string;\n  status: Status;\n};\n\nconst TestSummary = ({ branchName, date, status }: TestProps) => {\n  return (\n    <>\n      <Stack isInline>\n        <Text>{branchName}</Text>\n        <Badge\n          variantColor=\"cyan\"\n          fontSize=\"14px\"\n          fontWeight={600}\n          rounded=\"sm\"\n          padding=\"0px 4px\"\n          minH=\"auto\"\n          mb={3}\n        >\n          {status}\n        </Badge>\n      </Stack>\n      <Text>{date}</Text>\n    </>\n  );\n};\n\nexport default TestSummary;\n"]},"metadata":{},"sourceType":"module"}