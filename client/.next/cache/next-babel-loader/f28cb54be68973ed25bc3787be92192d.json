{"ast":null,"code":"var _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, useColorMode, Heading, Divider, Link, Icon, Stack } from \"@chakra-ui/core\";\n\nconst Card = ({\n  children,\n  gridArea,\n  heading,\n  pageLink\n}) => {\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(Box, {\n    bg: `mode.${colorMode}.card`,\n    p: 4,\n    rounded: \"sm\",\n    h: \"100%\",\n    gridArea: gridArea,\n    overflow: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, pageLink ? __jsx(Link, {\n    pos: \"sticky\",\n    href: pageLink,\n    top: 0,\n    bg: `mode.${colorMode}.card`,\n    color: `mode.${colorMode}.title`,\n    _hover: {\n      color: `mode.${colorMode}.titleHover`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"normal\",\n    letterSpacing: \"wide\",\n    lineHeight: \"normal\",\n    fontWeight: 800,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, heading), __jsx(Icon, {\n    name: \"arrow-forward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  })), __jsx(Divider, {\n    borderColor: `mode.${colorMode}.icon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })) : __jsx(Box, {\n    pos: \"sticky\",\n    top: 0,\n    bg: `mode.${colorMode}.card`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, heading ? __jsx(Heading, {\n    as: \"h2\",\n    color: `mode.${colorMode}.title`,\n    fontSize: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"wide\",\n    fontWeight: 800,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, heading) : null, __jsx(Divider, {\n    borderColor: `mode.${colorMode}.icon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  })), children);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx"],"names":["React","Box","useColorMode","Heading","Divider","Link","Icon","Stack","Card","children","gridArea","heading","pageLink","colorMode","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,KAPF,QAQO,iBARP;;AAiBA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAD,KAA0D;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAgBX,YAAY,EAAlC;AACA,SACE,MAAC,GAAD;AACE,IAAA,EAAE,EAAG,QAAOW,SAAU,OADxB;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,OAAO,EAAC,IAHV;AAIE,IAAA,CAAC,EAAC,MAJJ;AAKE,IAAA,QAAQ,EAAEH,QALZ;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,QAAQ,GACP,MAAC,IAAD;AACE,IAAA,GAAG,EAAC,QADN;AAEE,IAAA,IAAI,EAAEA,QAFR;AAGE,IAAA,GAAG,EAAE,CAHP;AAIE,IAAA,EAAE,EAAG,QAAOC,SAAU,OAJxB;AAKE,IAAA,KAAK,EAAG,QAAOA,SAAU,QAL3B;AAME,IAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAG,QAAOD,SAAU;AAA3B,KANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,MAAC,KAAD;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,UAAU,EAAE,GALd;AAME,IAAA,EAAE,EAAE,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGF,OARH,CADF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CARF,EAqBE,MAAC,OAAD;AAAS,IAAA,WAAW,EAAG,QAAOE,SAAU,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,CADO,GAyBP,MAAC,GAAD;AAAK,IAAA,GAAG,EAAC,QAAT;AAAkB,IAAA,GAAG,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAG,QAAOA,SAAU,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,OAAO,GACN,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,EAAG,QAAOE,SAAU,QAF3B;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,aAAa,EAAC,MALhB;AAME,IAAA,UAAU,EAAE,GANd;AAOE,IAAA,EAAE,EAAE,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGF,OATH,CADM,GAYJ,IAbN,EAcE,MAAC,OAAD;AAAS,IAAA,WAAW,EAAG,QAAOE,SAAU,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAjCJ,EAmDGJ,QAnDH,CADF;AAuDD,CAzDD;;AA2DA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  useColorMode,\n  Heading,\n  Divider,\n  Link,\n  Icon,\n  Stack,\n} from \"@chakra-ui/core\";\n\ntype CardProps = {\n  children: object;\n  gridArea: string;\n  heading?: string;\n  pageLink?: string;\n};\n\nconst Card = ({ children, gridArea, heading, pageLink }: CardProps) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      bg={`mode.${colorMode}.card`}\n      p={4}\n      rounded=\"sm\"\n      h=\"100%\"\n      gridArea={gridArea}\n      overflow=\"scroll\"\n    >\n      {pageLink ? (\n        <Link\n          pos=\"sticky\"\n          href={pageLink}\n          top={0}\n          bg={`mode.${colorMode}.card`}\n          color={`mode.${colorMode}.title`}\n          _hover={{ color: `mode.${colorMode}.titleHover` }}\n        >\n          <Stack isInline justify=\"space-between\">\n            <Heading\n              as=\"h2\"\n              fontSize=\"normal\"\n              letterSpacing=\"wide\"\n              lineHeight=\"normal\"\n              fontWeight={800}\n              pb={2}\n            >\n              {heading}\n            </Heading>\n            <Icon name=\"arrow-forward\" />\n          </Stack>\n          <Divider borderColor={`mode.${colorMode}.icon`} />\n        </Link>\n      ) : (\n        <Box pos=\"sticky\" top={0} bg={`mode.${colorMode}.card`}>\n          {heading ? (\n            <Heading\n              as=\"h2\"\n              color={`mode.${colorMode}.title`}\n              fontSize=\"normal\"\n              lineHeight=\"normal\"\n              letterSpacing=\"wide\"\n              fontWeight={800}\n              pb={2}\n            >\n              {heading}\n            </Heading>\n          ) : null}\n          <Divider borderColor={`mode.${colorMode}.icon`} />\n        </Box>\n      )}\n\n      {children}\n    </Box>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}