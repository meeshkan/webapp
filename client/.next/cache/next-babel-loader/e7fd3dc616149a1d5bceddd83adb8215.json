{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, useColorMode, Heading, Divider } from \"@chakra-ui/core\";\n\nvar Card = function Card(_ref) {\n  var children = _ref.children,\n      gridArea = _ref.gridArea,\n      heading = _ref.heading;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return __jsx(Box, {\n    bg: \"mode.\".concat(colorMode, \".card\"),\n    p: 4,\n    rounded: \"sm\",\n    h: \"100%\",\n    gridArea: gridArea,\n    overflow: \"scroll\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, heading ? __jsx(Box, {\n    pos: \"sticky\",\n    top: 0,\n    bg: \"mode.\".concat(colorMode, \".card\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    color: \"mode.\".concat(colorMode, \".title\"),\n    fontSize: 4,\n    letterSpacing: \"wide\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, heading), __jsx(Divider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  })) : null, children);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx"],"names":["React","Box","useColorMode","Heading","Divider","Card","children","gridArea","heading","colorMode"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCC,OAArC,QAAoD,iBAApD;;AAQA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAgD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,MAAzBC,OAAyB,QAAzBA,OAAyB;;AAAA,sBACrCN,YAAY,EADyB;AAAA,MACnDO,SADmD,iBACnDA,SADmD;;AAE3D,SACE,MAAC,GAAD;AACE,IAAA,EAAE,iBAAUA,SAAV,UADJ;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,OAAO,EAAC,IAHV;AAIE,IAAA,CAAC,EAAC,MAJJ;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGC,OAAO,GACN,MAAC,GAAD;AAAK,IAAA,GAAG,EAAC,QAAT;AAAkB,IAAA,GAAG,EAAE,CAAvB;AAA0B,IAAA,EAAE,iBAAUC,SAAV,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,iBAAUA,SAAV,WAFP;AAGE,IAAA,QAAQ,EAAE,CAHZ;AAIE,IAAA,aAAa,EAAC,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGD,OANH,CADF,EASE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADM,GAYJ,IApBN,EAsBGF,QAtBH,CADF;AA0BD,CA5BD;;AA8BA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport { Box, useColorMode, Heading, Divider } from \"@chakra-ui/core\";\n\ntype CardProps = {\n  children: object;\n  gridArea: string;\n  heading?: string;\n};\n\nconst Card = ({ children, gridArea, heading }: CardProps) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      bg={`mode.${colorMode}.card`}\n      p={4}\n      rounded=\"sm\"\n      h=\"100%\"\n      gridArea={gridArea}\n      overflow=\"scroll\"\n    >\n      {heading ? (\n        <Box pos=\"sticky\" top={0} bg={`mode.${colorMode}.card`}>\n          <Heading\n            as=\"h2\"\n            color={`mode.${colorMode}.title`}\n            fontSize={4}\n            letterSpacing=\"wide\"\n          >\n            {heading}\n          </Heading>\n          <Divider />\n        </Box>\n      ) : null}\n\n      {children}\n    </Box>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}