{"ast":null,"code":"var _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/client/src/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { parseCookies } from \"nookies\";\nimport fetch from \"isomorphic-fetch\"; // Cards\n\nfunction Home(props) {\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"Welcome to Nextjs OAuth with GitHub\"), !props.authorization && __jsx(\"a\", {\n    href: \"http://localhost:3001/auth/github\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"Click here to login\")) // <Grid\n  //   templateColumns=\"repeat(3, 1fr)\"\n  //   templateRows=\"repeat(2, 1fr)\"\n  //   gap={8}\n  //   // pos=\"fixed\"\n  //   // bottom={8}\n  //   // right={8}\n  //   // left={8}\n  //   // top={128}\n  // >\n  //   <Settings />\n  //   <Production />\n  //   <Branch />\n  //   <Chart />\n  // </Grid>\n  ;\n}\n\nasync function getUser(authorization) {\n  const res = await fetch(\"http://localhost:3001/user\", {\n    headers: {\n      authorization\n    }\n  });\n  if (res.status === 200) return {\n    authorization,\n    user: res.data\n  };else return {\n    authorization\n  };\n}\n\nHome.getInitialProps = async ctx => {\n  const {\n    authorization\n  } = parseCookies(ctx);\n  const {\n    token\n  } = ctx.query;\n  const props = getUser(authorization || token);\n  return props;\n};\n\nexport default Home;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/client/src/pages/index.tsx"],"names":["React","parseCookies","fetch","Home","props","authorization","getUser","res","headers","status","user","data","getInitialProps","ctx","token","query"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,kBAAlB,C,CAEA;;AAMA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,EAEG,CAACA,KAAK,CAACC,aAAP,IACC;AAAG,IAAA,IAAI,EAAE,mCAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADF,CAOE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArBF;AAuBD;;AACD,eAAeC,OAAf,CAAuBD,aAAvB,EAAsC;AACpC,QAAME,GAAG,GAAG,MAAML,KAAK,CAAC,4BAAD,EAA+B;AACpDM,IAAAA,OAAO,EAAE;AAAEH,MAAAA;AAAF;AAD2C,GAA/B,CAAvB;AAIA,MAAIE,GAAG,CAACE,MAAJ,KAAe,GAAnB,EAAwB,OAAO;AAAEJ,IAAAA,aAAF;AAAiBK,IAAAA,IAAI,EAAEH,GAAG,CAACI;AAA3B,GAAP,CAAxB,KACK,OAAO;AAAEN,IAAAA;AAAF,GAAP;AACN;;AAEDF,IAAI,CAACS,eAAL,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAM;AAAER,IAAAA;AAAF,MAAoBJ,YAAY,CAACY,GAAD,CAAtC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAYD,GAAG,CAACE,KAAtB;AAEA,QAAMX,KAAK,GAAGE,OAAO,CAACD,aAAa,IAAIS,KAAlB,CAArB;AAEA,SAAOV,KAAP;AACD,CAPD;;AASA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport { Grid } from \"@chakra-ui/core\";\nimport { parseCookies } from \"nookies\";\nimport fetch from \"isomorphic-fetch\";\n\n// Cards\nimport Settings from \"../components/Dashboard/settings\";\nimport Production from \"../components/Dashboard/production\";\nimport Branch from \"../components/Dashboard/branch\";\nimport Chart from \"../components/Dashboard/chart\";\n\nfunction Home(props) {\n  return (\n    <>\n      <h1>Welcome to Nextjs OAuth with GitHub</h1>\n      {!props.authorization && (\n        <a href={\"http://localhost:3001/auth/github\"}>Click here to login</a>\n      )}\n    </>\n    // <Grid\n    //   templateColumns=\"repeat(3, 1fr)\"\n    //   templateRows=\"repeat(2, 1fr)\"\n    //   gap={8}\n    //   // pos=\"fixed\"\n    //   // bottom={8}\n    //   // right={8}\n    //   // left={8}\n    //   // top={128}\n    // >\n    //   <Settings />\n    //   <Production />\n    //   <Branch />\n    //   <Chart />\n    // </Grid>\n  );\n}\nasync function getUser(authorization) {\n  const res = await fetch(\"http://localhost:3001/user\", {\n    headers: { authorization },\n  });\n\n  if (res.status === 200) return { authorization, user: res.data };\n  else return { authorization };\n}\n\nHome.getInitialProps = async (ctx) => {\n  const { authorization } = parseCookies(ctx);\n  const { token } = ctx.query;\n\n  const props = getUser(authorization || token);\n\n  return props;\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}