{"ast":null,"code":"var _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, useColorMode, Heading, Divider, Link, Icon, Stack } from \"@chakra-ui/core\";\nimport { Link as NextLink } from \"next/link\";\n\nconst Card = ({\n  children,\n  gridArea,\n  heading,\n  pageLink\n}) => {\n  const {\n    colorMode\n  } = useColorMode();\n  return __jsx(Box, {\n    bg: `mode.${colorMode}.card`,\n    p: 4,\n    maxH: \"80vh\",\n    rounded: \"sm\",\n    gridArea: gridArea,\n    overflow: \"scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, pageLink ? __jsx(Link, {\n    as: NextLink,\n    href: pageLink,\n    color: `mode.${colorMode}.title`,\n    _hover: {\n      color: `mode.${colorMode}.titleHover`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    justify: \"space-between\",\n    borderBottom: \"1px solid\",\n    borderColor: `mode.${colorMode}.icon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"normal\",\n    letterSpacing: \"wide\",\n    lineHeight: \"normal\",\n    fontWeight: 800,\n    mb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, heading), __jsx(Icon, {\n    name: \"arrow-forward\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }))) : __jsx(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, heading ? __jsx(Heading, {\n    as: \"h2\",\n    color: `mode.${colorMode}.title`,\n    fontSize: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"wide\",\n    fontWeight: 800,\n    pb: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, heading) : null, __jsx(Divider, {\n    borderColor: `mode.${colorMode}.icon`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  })), children);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx"],"names":["React","Box","useColorMode","Heading","Divider","Link","Icon","Stack","NextLink","Card","children","gridArea","heading","pageLink","colorMode","color"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,IALF,EAMEC,IANF,EAOEC,KAPF,QAQO,iBARP;AASA,SAASF,IAAI,IAAIG,QAAjB,QAAiC,WAAjC;;AASA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,QAAZ;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAD,KAA0D;AACrE,QAAM;AAAEC,IAAAA;AAAF,MAAgBZ,YAAY,EAAlC;AACA,SACE,MAAC,GAAD;AACE,IAAA,EAAE,EAAG,QAAOY,SAAU,OADxB;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,OAAO,EAAC,IAJV;AAKE,IAAA,QAAQ,EAAEH,QALZ;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,QAAQ,GACP,MAAC,IAAD;AACE,IAAA,EAAE,EAAEL,QADN;AAEE,IAAA,IAAI,EAAEK,QAFR;AAGE,IAAA,KAAK,EAAG,QAAOC,SAAU,QAH3B;AAIE,IAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAG,QAAOD,SAAU;AAA3B,KAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,KAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAC,eAFV;AAGE,IAAA,YAAY,EAAC,WAHf;AAIE,IAAA,WAAW,EAAG,QAAOA,SAAU,OAJjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,UAAU,EAAE,GALd;AAME,IAAA,EAAE,EAAE,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGF,OARH,CANF,EAgBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CANF,CADO,GA2BP,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,EAAG,QAAOE,SAAU,QAF3B;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,aAAa,EAAC,MALhB;AAME,IAAA,UAAU,EAAE,GANd;AAOE,IAAA,EAAE,EAAE,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGF,OATH,CADM,GAYJ,IAbN,EAcE,MAAC,OAAD;AAAS,IAAA,WAAW,EAAG,QAAOE,SAAU,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CAnCJ,EAqDGJ,QArDH,CADF;AAyDD,CA3DD;;AA6DA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  useColorMode,\n  Heading,\n  Divider,\n  Link,\n  Icon,\n  Stack,\n} from \"@chakra-ui/core\";\nimport { Link as NextLink } from \"next/link\";\n\ntype CardProps = {\n  children: object;\n  gridArea?: string;\n  heading?: string;\n  pageLink?: string;\n};\n\nconst Card = ({ children, gridArea, heading, pageLink }: CardProps) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      bg={`mode.${colorMode}.card`}\n      p={4}\n      maxH=\"80vh\"\n      rounded=\"sm\"\n      gridArea={gridArea}\n      overflow=\"scroll\"\n    >\n      {pageLink ? (\n        <Link\n          as={NextLink}\n          href={pageLink}\n          color={`mode.${colorMode}.title`}\n          _hover={{ color: `mode.${colorMode}.titleHover` }}\n        >\n          <Stack\n            isInline\n            justify=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor={`mode.${colorMode}.icon`}\n          >\n            <Heading\n              as=\"h2\"\n              fontSize=\"normal\"\n              letterSpacing=\"wide\"\n              lineHeight=\"normal\"\n              fontWeight={800}\n              mb={2}\n            >\n              {heading}\n            </Heading>\n            <Icon name=\"arrow-forward\" />\n          </Stack>\n        </Link>\n      ) : (\n        <Box>\n          {heading ? (\n            <Heading\n              as=\"h2\"\n              color={`mode.${colorMode}.title`}\n              fontSize=\"normal\"\n              lineHeight=\"normal\"\n              letterSpacing=\"wide\"\n              fontWeight={800}\n              pb={2}\n            >\n              {heading}\n            </Heading>\n          ) : null}\n          <Divider borderColor={`mode.${colorMode}.icon`} />\n        </Box>\n      )}\n\n      {children}\n    </Box>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}