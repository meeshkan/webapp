{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Box, useColorMode, Heading, Divider, Link as ChakraLink, Icon, Stack } from \"@chakra-ui/core\";\nimport Link from \"next/link\";\n\nvar Card = function Card(_ref) {\n  var children = _ref.children,\n      gridArea = _ref.gridArea,\n      heading = _ref.heading,\n      pageLink = _ref.pageLink;\n\n  var _useColorMode = useColorMode(),\n      colorMode = _useColorMode.colorMode;\n\n  return __jsx(Box, {\n    bg: \"mode.\".concat(colorMode, \".card\"),\n    p: 4,\n    maxH: \"80vh\",\n    rounded: \"sm\",\n    gridArea: gridArea,\n    overflow: \"scroll\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, pageLink ? __jsx(ChakraLink // @ts-ignore\n  , {\n    as: Link,\n    href: pageLink,\n    color: \"mode.\".concat(colorMode, \".title\"),\n    _hover: {\n      color: \"mode.\".concat(colorMode, \".titleHover\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, __jsx(Stack, {\n    isInline: true,\n    justify: \"space-between\",\n    borderBottom: \"1px solid\",\n    borderColor: \"mode.\".concat(colorMode, \".icon\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    as: \"h2\",\n    fontSize: \"normal\",\n    letterSpacing: \"wide\",\n    lineHeight: \"normal\",\n    fontWeight: 800,\n    mb: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, heading), __jsx(Icon, {\n    name: \"arrow-forward\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))) : __jsx(Box, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, heading ? __jsx(Heading, {\n    as: \"h2\",\n    color: \"mode.\".concat(colorMode, \".title\"),\n    fontSize: \"normal\",\n    lineHeight: \"normal\",\n    letterSpacing: \"wide\",\n    fontWeight: 800,\n    pb: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, heading) : null, __jsx(Divider, {\n    borderColor: \"mode.\".concat(colorMode, \".icon\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })), children);\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/makennasmutz/Documents/GitHub/webapp/src/components/molecules/card.tsx"],"names":["React","Box","useColorMode","Heading","Divider","Link","ChakraLink","Icon","Stack","Card","children","gridArea","heading","pageLink","colorMode","color"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,YAFF,EAGEC,OAHF,EAIEC,OAJF,EAKEC,IAAI,IAAIC,UALV,EAMEC,IANF,EAOEC,KAPF,QAQO,iBARP;AASA,OAAOH,IAAP,MAAiB,WAAjB;;AASA,IAAMI,IAAI,GAAG,SAAPA,IAAO,OAA0D;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,OAAmC,QAAnCA,OAAmC;AAAA,MAA1BC,QAA0B,QAA1BA,QAA0B;;AAAA,sBAC/CX,YAAY,EADmC;AAAA,MAC7DY,SAD6D,iBAC7DA,SAD6D;;AAErE,SACE,MAAC,GAAD;AACE,IAAA,EAAE,iBAAUA,SAAV,UADJ;AAEE,IAAA,CAAC,EAAE,CAFL;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,OAAO,EAAC,IAJV;AAKE,IAAA,QAAQ,EAAEH,QALZ;AAME,IAAA,QAAQ,EAAC,QANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGE,QAAQ,GACP,MAAC,UAAD,CACE;AADF;AAEE,IAAA,EAAE,EAAER,IAFN;AAGE,IAAA,IAAI,EAAEQ,QAHR;AAIE,IAAA,KAAK,iBAAUC,SAAV,WAJP;AAKE,IAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,iBAAUD,SAAV;AAAP,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,MAAC,KAAD;AACE,IAAA,QAAQ,MADV;AAEE,IAAA,OAAO,EAAC,eAFV;AAGE,IAAA,YAAY,EAAC,WAHf;AAIE,IAAA,WAAW,iBAAUA,SAAV,UAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,QAAQ,EAAC,QAFX;AAGE,IAAA,aAAa,EAAC,MAHhB;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,UAAU,EAAE,GALd;AAME,IAAA,EAAE,EAAE,CANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQGF,OARH,CANF,EAgBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CAPF,CADO,GA4BP,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,GACN,MAAC,OAAD;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,KAAK,iBAAUE,SAAV,WAFP;AAGE,IAAA,QAAQ,EAAC,QAHX;AAIE,IAAA,UAAU,EAAC,QAJb;AAKE,IAAA,aAAa,EAAC,MALhB;AAME,IAAA,UAAU,EAAE,GANd;AAOE,IAAA,EAAE,EAAE,CAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGF,OATH,CADM,GAYJ,IAbN,EAcE,MAAC,OAAD;AAAS,IAAA,WAAW,iBAAUE,SAAV,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CApCJ,EAsDGJ,QAtDH,CADF;AA0DD,CA5DD;;AA8DA,eAAeD,IAAf","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  useColorMode,\n  Heading,\n  Divider,\n  Link as ChakraLink,\n  Icon,\n  Stack,\n} from \"@chakra-ui/core\";\nimport Link from \"next/link\";\n\ntype CardProps = {\n  children: object;\n  gridArea?: string;\n  heading?: string;\n  pageLink?: string;\n};\n\nconst Card = ({ children, gridArea, heading, pageLink }: CardProps) => {\n  const { colorMode } = useColorMode();\n  return (\n    <Box\n      bg={`mode.${colorMode}.card`}\n      p={4}\n      maxH=\"80vh\"\n      rounded=\"sm\"\n      gridArea={gridArea}\n      overflow=\"scroll\"\n    >\n      {pageLink ? (\n        <ChakraLink\n          // @ts-ignore\n          as={Link}\n          href={pageLink}\n          color={`mode.${colorMode}.title`}\n          _hover={{ color: `mode.${colorMode}.titleHover` }}\n        >\n          <Stack\n            isInline\n            justify=\"space-between\"\n            borderBottom=\"1px solid\"\n            borderColor={`mode.${colorMode}.icon`}\n          >\n            <Heading\n              as=\"h2\"\n              fontSize=\"normal\"\n              letterSpacing=\"wide\"\n              lineHeight=\"normal\"\n              fontWeight={800}\n              mb={2}\n            >\n              {heading}\n            </Heading>\n            <Icon name=\"arrow-forward\" />\n          </Stack>\n        </ChakraLink>\n      ) : (\n        <Box>\n          {heading ? (\n            <Heading\n              as=\"h2\"\n              color={`mode.${colorMode}.title`}\n              fontSize=\"normal\"\n              lineHeight=\"normal\"\n              letterSpacing=\"wide\"\n              fontWeight={800}\n              pb={2}\n            >\n              {heading}\n            </Heading>\n          ) : null}\n          <Divider borderColor={`mode.${colorMode}.icon`} />\n        </Box>\n      )}\n\n      {children}\n    </Box>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}